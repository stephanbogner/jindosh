!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).jindosh={})}(this,(function(e){"use strict";function t(e,t,n={}){const o=n.force_key??"f",i=n.weight_key??"w",r=n.default_force??1,s=n.default_weight??1,f=n.force_scale??1,a=n.maximum_distance_of_force??!1,c=e.x-t.x,_=e.y-t.y,u=Math.sqrt(Math.pow(c,2)+Math.pow(_,2));if(a&&u>=a)return{point_1:e,point_2:t};{const n=e[i]??s,a=t[i]??s,d=n+a,l=1e-5,h=Math.max(u,l),y=Math.atan2(c,_),p=((e[o]??r)+(t[o]??r))/2,x=5e4,g=1/Math.pow(h,2)*p*x*f,m=a/d*g,M=n/d*g;return[{dx:Math.sin(y)*m,dy:Math.cos(y)*m},{dx:-Math.sin(y)*M,dy:-Math.cos(y)*M}]}}function n(e){const t=e.length;let n=[];for(let e=0;e<t;e++)for(let o=e+1;o<t;o++){const t=[e,o];n.push(t)}return n}e.magnetic_force_between_points=function(e,o={}){let i=JSON.parse(JSON.stringify(e));const r=n(i);let s=[];return r.map((e=>{const n=e[0],o=e[1],r=t(i[n],i[o]);s[n]||(s[n]={x:0,y:0}),s[n].x+=r[0].dx,s[n].y+=r[0].dy,s[o]||(s[o]={x:0,y:0}),s[o].x+=r[1].dx,s[o].y+=r[1].dy})),i.map(((e,t)=>{s[t]&&(e.x+=s[t].x/r.length,e.y+=s[t].y/r.length)})),i},e.magnetic_force_between_two_points=t,e.merge_class_names=function(...e){return e.filter(Boolean).join(" ")},e.rgb_to_hex=function(e){return"#"+((1<<24)+(e.r<<16)+(e.g<<8)+e.b).toString(16).slice(1)},e.unique_pairs_from_array_as_indexes=n,Object.defineProperty(e,"__esModule",{value:!0})}));
